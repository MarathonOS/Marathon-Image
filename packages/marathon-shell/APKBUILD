# Contributor: Patrick Quinn <patrick@example.com>
# Maintainer: Patrick Quinn <patrick@example.com>
pkgname=marathon-shell
pkgver=1.0.0
pkgrel=8
pkgdesc="Marathon Shell - Modern Wayland compositor with Qt6/QML"
url="https://github.com/patrickjquinn/Marathon-Shell"
arch="aarch64"
license="MIT"
depends="
	qt6-qtbase
	qt6-qtbase-sqlite
	qt6-qtdeclarative
	qt6-qtwayland
	qt6-qtwebengine
	qt6-qtmultimedia
	qt6-qtsvg
	qt6-qtvirtualkeyboard
	qt6-qtlocation
	qt6-qtpositioning
	wayland
	wayland-protocols
	mesa
	mesa-gbm
	mesa-egl
	mesa-gl
	mesa-dri-gallium
	mesa-gles
	pipewire
	pipewire-pulse
	wireplumber
	pulseaudio-utils
	networkmanager
	upower
	modemmanager
	geoclue
	bluez
	iio-sensor-proxy
	bash
	coreutils
	util-linux
	dbus
	polkit
	greetd
	ffmpeg
	gst-plugins-base
	gst-plugins-good
	"
makedepends="
	cmake
	samurai
	qt6-qtbase-dev
	qt6-qtdeclarative-dev
	qt6-qtwayland-dev
	qt6-qtwebengine-dev
	qt6-qtmultimedia-dev
	qt6-qtsvg-dev
	qt6-qtlocation-dev
	qt6-qtpositioning-dev
	wayland-dev
	wayland-protocols
	mesa-dev
	dbus-dev
	eudev-dev
	libinput-dev
	git
	"
install=""
subpackages="$pkgname-doc"
source="$pkgname-$pkgver.tar.gz::https://github.com/patrickjquinn/Marathon-Shell/archive/main.tar.gz"
builddir="$srcdir/Marathon-Shell-main"
options="!check"

prepare() {
	default_prepare
	
	# Disable QML cache generation to save memory during build
	# Add NO_CACHEGEN to all qt6_add_qml_module calls
	sed -i '/qt6_add_qml_module/,/^)/ { /^)/i\    NO_CACHEGEN
	}' "$builddir/shell/CMakeLists.txt"
	
	# Fix timestamps from GitHub archive
	find "$builddir" -exec touch {} +
}

build() {
	cd "$builddir"
	
	# Clean any existing build directories
	rm -rf build build-apps
	
	# Disable QML cache to reduce memory usage during build
	export QML_DISABLE_DISK_CACHE=1
	export QT_DISABLE_QML_CACHE=1
	
	# Build main shell with SINGLE CORE and MinSizeRel to reduce memory
	cmake -B build \
		-DCMAKE_BUILD_TYPE=MinSizeRel \
		-DCMAKE_INSTALL_PREFIX=/usr \
		-DCMAKE_INSTALL_LIBDIR=lib \
		-DCMAKE_SKIP_BUILD_RPATH=TRUE \
		-DCMAKE_BUILD_WITH_INSTALL_RPATH=TRUE \
		-DCMAKE_INSTALL_RPATH=\$ORIGIN \
		-DQt6_DIR=/usr/lib/cmake/Qt6 \
		-DQT_QMAKE_EXECUTABLE=/usr/bin/qmake6
	
	# Build with single job to minimize memory
	cmake --build build -j1
	
	# Build apps with single core
	cmake -B build-apps -S apps \
		-DCMAKE_BUILD_TYPE=MinSizeRel \
		-DCMAKE_INSTALL_PREFIX=/usr \
		-DMARATHON_APPS_DIR=/usr/share/marathon-apps \
		-DCMAKE_SKIP_BUILD_RPATH=TRUE \
		-DCMAKE_BUILD_WITH_INSTALL_RPATH=TRUE \
		-DCMAKE_INSTALL_RPATH=\$ORIGIN \
		-DQt6_DIR=/usr/lib/cmake/Qt6
	cmake --build build-apps -j1
}

package() {
	cd "$builddir"
	
	# Install main shell
	DESTDIR="$pkgdir" cmake --install build
	
	# Install apps
	DESTDIR="$pkgdir" cmake --install build-apps
	
	# Fix session script to use -platform eglfs flag
	sed -i 's|exec /usr/bin/marathon-shell-bin "$@"|exec /usr/bin/marathon-shell-bin -platform eglfs "$@"|' \
		"$pkgdir/usr/bin/marathon-shell-session"
}

sha512sums="
e79882cf9d4f4cf19a39e4bb89a133bbdf6be97a61d637175a7c5500eae261cc9f44e1ab6b06116fc02c290065aaac7bba2afe57bd7a794398f7ceeb4324cdd8  marathon-shell-1.0.0.tar.gz
"
